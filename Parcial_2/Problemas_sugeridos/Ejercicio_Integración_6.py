# -*- coding: utf-8 -*-
"""Ejercicico_Integración_6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10AnZ4OHeH_xCt3NUgHYcoWVx3afxeiuw
"""

import numpy as np

def simpson_1_3(func, n: int, left: float, right: float) -> float:
    res = func(left) + func(right)
    delta = (right - left) / n
    for i, x in enumerate(np.arange(left + delta, right, delta)):
        res += func(x) * (4 if i % 2 == 0 else 2)
    return delta * res / 3

def trapezoidal(f,x0,xn,n):
    # calculating step size
    h = (xn - x0) / n

    # Finding sum
    integration = f(x0) + f(xn)

    for i in range(1,n):
        k = x0 + i*h
        integration = integration + 2 * f(k)

    # Finding final integration value
    integration = integration * h/2

    return integration

R = 0.5
a = 0.01

def func(x):
    f = (((a**2) - (x**2))**(1/2))/(R + x)
    return f

print('Resultado analítico:',)
print(np.pi*(R- np.sqrt((R**2)-(a**2))))

simp = simpson_1_3(func,90,-a,a)
print('\nResultado Regla de simpson:')
print(simp)

trap = trapezoidal(func,-a,a,90)
print('\nResultado método trapecio:')
print(simp)